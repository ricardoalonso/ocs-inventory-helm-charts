---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ocsinventory.fullname" . }}
  labels:
    {{- include "ocsinventory.labels" . | nindent 4 }}
  {{- if .Values.deploymentAnnotations }}
  annotations:
    {{ toYaml .Values.deploymentAnnotations | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ocsinventory.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ocsinventory.labels" . | nindent 8 }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
          - name: OCS_DB_NAME
            valueFrom:
              secretKeyRef:
                  name: {{ template "ocsinventory.fullname" . }}
                  key: db-name
          - name: OCS_DB_PASS
            valueFrom:
              secretKeyRef:
                  name: {{ template "ocsinventory.fullname" . }}
                  key: db-pass
          - name: OCS_DB_SERVER
            valueFrom:
              secretKeyRef:
                  name: {{ template "ocsinventory.fullname" . }}
                  key: db-host
          - name: OCS_DB_USER
            valueFrom:
              secretKeyRef:
                  name: {{ template "ocsinventory.fullname" . }}
                  key: db-user
          - name: OCS_SSL_ENABLED
            value: "0"
          - name: OCS_DBI_PRINT_ERROR
            value: "0"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /ocsinventory
              name: {{ template "ocsinventory.fullname" . }}-data
            - mountPath: /etc/php.d/50-ocsinventory.ini
              name: {{ template "ocsinventory.fullname" . }}-config
        {{- if .Values.metrics.enabled }}
        - name: {{ .Chart.Name }}-apache-metrics
          image: "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: 9117
              protocol: TCP
          resources:
            {{- toYaml .Values.metrics.resources | nindent 12 }}

        {{- end }}
      volumes:
        - name: {{ template "ocsinventory.fullname" . }}-data
          persistentVolumeClaim:
            {{- if .Values.persistence.existingClaim }}
            claimName: {{ .Values.persistence.existingClaim }}
            {{- else }}
            claimName: {{ template "ocsinventory.fullname" . }}-data
            {{- end }}
        - name: {{ template "ocsinventory.fullname" . }}-config
          configMap:
            name: {{ template "ocsinventory.fullname" . }}-config
            defaultMode: 420
...
---
{{- if .Values.proxy.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-proxy
    {{- include "ocsinventory.labels" . | nindent 4 }}
  name: {{ .Release.Name }}-proxy
  {{- if .Values.proxy.deploymentAnnotations }}
  annotations:
    {{ toYaml .Values.proxy.deploymentAnnotations | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.proxy.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-proxy
      {{- include "ocsinventory.labels" . | nindent 8 }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-proxy
        {{- include "ocsinventory.labels" . | nindent 8 }}
      {{- if .Values.proxy.podAnnotations }}
      annotations:
        {{ toYaml .Values.proxy.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      containers:
      - env:
        - name: LISTEN_PORT
          value: "8080"
        - name: API_AUTH_FILE
          value: {{ .Values.proxy.authFile }}
        - name: OCS_INVENTORY_SERVER
          value: {{ template "ocsinventory.fullname" . }}
        - name: OCS_INVENTORY_PORT
          value: "8080"
        - name: READ_TIMEOUT
          value: {{ .Values.proxy.readTimeout }}
        - name: CONNECT_TIMEOUT
          value: {{ .Values.proxy.connectTimeout }}
        - name: SEND_TIMEOUT
          value: {{ .Values.proxy.sendTimeout }}
        - name: MAX_BODY_SIZE
          value: {{ .Values.proxy.maxBodySize }}
        - name: PORT_TYPE
        image: {{ .Values.proxy.image }}
        imagePullPolicy: Always
        name: nginx-unprivileged
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /etc/nginx/auth
          name: {{ .Release.Name }}-auth
        - mountPath: /etc/nginx/templates
          name: {{ .Release.Name }}-proxyconf
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ .Release.Name }}-auth
        name: {{ .Release.Name }}-auth
      - configMap:
          defaultMode: 420
          name: {{ .Release.Name }}-proxyconf
        name: {{ .Release.Name }}-proxyconf
{{- end }}
...